{"version":3,"sources":["Authenticate.js","Tag.js","Form.js","Footer.js","App.js","serviceWorker.js","index.js","assets/ProgSocLogo.png"],"names":["Authenticate","authUser","emailHandler","passHandler","email","password","style","fontWeight","textAlign","marginBottom","src","logo","alt","width","height","onSubmit","e","preventDefault","marginRight","className","name","type","placeholder","onChange","target","value","marginTop","light","Tag","color","Form","updateInput","setState","displayColor","prevState","displayColorSelect","hideColor","pickColor","tagMap","state","set","hex","addTag","tagText","has","firstTag","tags","Object","fromEntries","Map","noNameCol","removeTag","length","temp","pop","renderTags","map","tag","id","key","addEvent","firebase","firestore","collection","add","description","location","photo_url","photoUrl","start","Timestamp","fromDate","Date","startDate","summary","float","onClick","this","props","logOut","htmlFor","required","rows","display","justifyContent","alignItems","paddingTop","paddingBottom","onChangeComplete","React","Component","footerStyle","fontSize","paddingLeft","Footer","getFullYear","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","App","useState","isLoggedIn","setLog","setEmail","setPass","showError","setShowError","useEffect","onAuthStateChanged","user","signOut","catch","error","errorCode","code","errorMessage","message","console","log","signInWithEmailAndPassword","setTimeout","pass","position","bottom","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.15aa3fe2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport logo from './assets/ProgSocLogo.png';\n\nfunction Authenticate({authUser, emailHandler, passHandler, email, password}) {\n   \n    const updateEmailInput = e => {\n      e.preventDefault()\n      emailHandler(e.target.value)\n    }\n  \n    const updatePassInput = e => {\n      e.preventDefault()\n      passHandler(e.target.value)\n    }\n  \n    const onSubmit = e => {\n      e.preventDefault()\n      authUser(email, password)\n    }\n  \n    return (\n        <div>\n        <h1 style={{fontWeight: 'lighter', textAlign: 'center', marginBottom: '30px'}}><img src={logo} alt='progsoc-logo' width='100px' height='100px'/> Login</h1>\n        <form onSubmit={onSubmit}>\n            <div style={{marginRight: '48%'}}><h3 style={{fontWeight:'normal'}}>Email</h3></div>\n            <div><input className='loginInput' name='emailInput' type='email' placeholder='Your email' onChange={updateEmailInput}></input></div>\n            <div style={{marginRight: '45%', marginTop:'30px'}}><h3 style={{fontWeight:'normal'}}>Password</h3></div>\n            <div><input className='loginInput' type='password' placeholder='Your password' onChange={updatePassInput}></input></div>\n            <br/>\n            <button className='coolButton' type='submit' style={{marginTop:'30px'}}>Log In</button>\n        </form>\n        </div>\n    )\n}\n\nexport default Authenticate;\n\n","import React from 'react'\n\nconst light = {\n    fontWeight: 'lighter'\n}\n\nfunction Tag({name, color}) {\n    return (\n        <div>\n            <h4 style={light}> name: <span style={{fontWeight:'normal'}}>{name}</span>, color: <span style={{fontWeight:'normal'}}>{color}</span></h4>\n        </div>\n    )\n}\n\nexport default Tag;","import React from 'react';\nimport firebase from 'firebase';\nimport logo from './assets/ProgSocLogo.png';\nimport { CirclePicker } from 'react-color';\nimport Tag from './Tag';\nimport './App.css';\n\nconst light = {\n    fontWeight: 'lighter',\n    textAlign: 'center'\n}\n\n\nclass Form extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            description: '',\n            location: '',\n            name: '',\n            photoUrl: '',\n            startDate: new Date(),\n            summary: '',\n            tagText: '',\n            tagMap: new Map(),\n            tags: [],\n            firstTag: true,\n            displayColorSelect: false,\n            noNameCol: false\n        }\n    }\n\n    // various handlers for changing state after buttons are clicked\n\n    updateInput = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    displayColor = e => {\n        e.preventDefault();\n        this.setState(prevState => ({\n            displayColorSelect: !prevState.displayColorSelect\n        }))\n    }\n\n    hideColor = e => {\n        e.preventDefault();\n        this.setState({displayColorSelect: false})\n    }\n\n    pickColor = color => {\n        this.setState({tagMap: this.state.tagMap.set('color',color.hex)})\n    }\n\n    addTag = e => {\n        e.preventDefault();\n\n        if (this.state.tagText === '' || !this.state.tagMap.has('color'))  {\n            this.setState({noNameCol: true})\n        } \n\n        else {\n\n            this.setState({firstTag: false})\n\n            this.setState(prevState => ({\n                tagMap: prevState.tagMap.set('name', this.state.tagText)\n            }))\n    \n            this.setState(prevState => ({\n                tags: [...prevState.tags, Object.fromEntries(this.state.tagMap)],\n                tagMap: new Map(),\n                tagText: '',\n                noNameCol: false\n            }))\n        }\n    }\n\n    removeTag = e => {\n        e.preventDefault();\n\n        if (this.state.tags.length > 0) {\n            let temp = [...this.state.tags]\n            temp.pop()\n            if (temp.length === 0) {\n                this.setState({firstTag: true})\n            }\n            this.setState({tags: temp})\n        } \n    }\n\n    renderTags = () => {\n        return this.state.tags.map((tag, id) => <Tag name={tag.name} color={tag.color} key={id}/>)\n    }\n\n    addEvent = e => {\n        e.preventDefault();\n        const db = firebase.firestore();\n        db.collection('events').add({\n            description: this.state.description,\n            location: this.state.location,\n            name: this.state.name,\n            photo_url: this.state.photoUrl,\n            start: firebase.firestore.Timestamp.fromDate(new Date(this.state.startDate)),\n            summary: this.state.summary,\n            tags: this.state.tags\n        });\n        this.setState({\n            description: '',\n            location: '',\n            name: '',\n            photoUrl: '',\n            startDate: new Date(),\n            summary: '',\n            tagText: '',\n            tagMap: new Map(),\n            tags: [],\n            firstTag: true,\n            displayColorSelect: false,\n            noNameCol: false\n        })\n    }\n\n    // renders the form\n\n    render() {\n        return (\n            <div className='inputDiv'>\n                <button className='coolButton' style={{float:'right', marginTop:'55px'}} onClick={this.props.logOut}>Log Out</button>\n                <h1 style={light}> <img src={logo} alt='progsoc-logo' width='100px' height='100px'/> Event Creator</h1>\n                <form onSubmit={this.addEvent}>\n                <div className='inputDiv'>\n                        <label className='required' htmlFor='name'>Name</label><br/>\n                        <input required name='name' type='text' \n                        onChange={this.updateInput} value={this.state.name}></input>\n                    </div>\n                    <div className='inputDiv'>\n                        <label className='required' htmlFor='description'>Description</label><br/>\n                        <textarea required name='description' type='text' rows='5'\n                        onChange={this.updateInput} value={this.state.description}></textarea>\n                    </div>\n                    <div className='inputDiv'>\n                        <label className='required' htmlFor='location'>Location</label><br/>\n                        <input required name='location' type='text' \n                        onChange={this.updateInput} value={this.state.location}></input>\n                    </div>\n                    <div className='inputDiv'>\n                        <label className='required' htmlFor='startDate'>Start Date</label><br/>\n                        <input required name='startDate' type='datetime-local' \n                        onChange={this.updateInput} value={this.state.startDate}></input>\n                    </div>\n                    <div className='inputDiv'>\n                        <label htmlFor='summary'>Summary</label><br/>\n                        <input name='summary' type='text' \n                        onChange={this.updateInput} value={this.state.summary}></input>\n                    </div>\n                    <div className='inputDiv'>\n                        <label htmlFor='photoUrl'>Photo URL</label><br/>\n                        <input name='photoUrl' type='url' \n                        onChange={this.updateInput} value={this.state.photoUrl}></input>\n                    </div>\n                    <div className='inputDiv'>\n                        <label htmlFor='tagText'>Tags</label><br/>\n                        <input name='tagText' type='text'  \n                        onChange={this.updateInput} value={this.state.tagText}></input>\n                        {this.state.noNameCol ? <h3 style={{fontWeight:'300', color:'red'}}>Tags need a name and colour!</h3> : null}\n                        {!this.state.firstTag ? <h2 style={light}>Your Tags</h2> : null}\n                        {this.state.tags.length >= 0 ? this.renderTags() : null}\n                        <button className='tagButton coolButton' onClick={this.displayColor}>Select Colour</button>\n                        {this.state.displayColorSelect ? \n                        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", paddingTop: '20px', paddingBottom: '20px'}}>\n                            <CirclePicker onChangeComplete={this.pickColor}/></div> : null}\n                        <button className='tagButton coolButton' onClick={this.addTag}>Add Tag</button>\n                        <button className='tagButton coolButton' onClick={this.removeTag}>Remove Last Tag</button>\n                    </div>\n                    <button className='eventButton coolButton' type='submit'>Add Event</button>\n                </form>\n            </div>\n        )\n    }\n    \n}\n\nexport default Form;","import React from 'react';\n\nconst footerStyle = {\n    fontSize: 'small',\n    color: '#6c757d',\n    paddingLeft: '10px'\n}\n\nfunction Footer() {\n    return (\n        <p style={footerStyle}>&copy; {new Date().getFullYear()} EUPS </p>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Authenticate from './Authenticate';\nimport Form from './Form';\nimport Footer from './Footer';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport './App.css';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAOYtNKsCiwjosXZEsS7Zw-vyrABepxZXQ\",\n  authDomain: \"prog-soc-site.firebaseapp.com\",\n  databaseURL: \"https://prog-soc-site.firebaseio.com\",\n  projectId: \"prog-soc-site\",\n  storageBucket: \"prog-soc-site.appspot.com\",\n  messagingSenderId: \"1050991347056\",\n  appId: \"1:1050991347056:web:e0a9a55f015c36c1c3bbb5\",\n  measurementId: \"G-MDS039HCQZ\"\n}\n\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\n\nfunction App() {\n  const [isLoggedIn, setLog] = useState(false)\n  const [email, setEmail] = useState('')\n  const [password, setPass] = useState('')\n  const [showError, setShowError] = useState(false)\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        setLog(true)\n        setShowError(false)\n      } else {\n        setLog(false)\n      }\n    })\n  }, [])\n\n  const authUser = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password).catch(error => {\n      setShowError(true)\n      setTimeout(() => {\n        setShowError(false)\n      }, 2000)\n    })\n  }\n\n  const emailHandler = email => {\n    setEmail(email)\n  }\n\n  const passHandler = pass => {\n    setPass(pass)\n  }\n\n  const logOut = () => {\n    auth.signOut().catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    })\n    setEmail('')\n    setPass('')\n  }\n\n  if (isLoggedIn) {\n    return (\n      <div>\n        <Form logOut={logOut}/>\n        <Footer/>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Authenticate authUser={authUser} emailHandler={emailHandler} \n        passHandler={passHandler} email={email} password={password}/> \n        <h3 className={showError ? 'show-error' : 'hide-error'} \n        style={{fontWeight: 'lighter', color: 'red', textAlign: 'center'}}>Incorrect credentials. Please check them again!</h3>\n        <div style={{position: 'fixed', bottom: '0'}}><Footer/></div>\n      </div>\n    )\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('event-app')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ProgSocLogo.f0f3a878.png\";"],"sourceRoot":""}